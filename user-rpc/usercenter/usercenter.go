// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package usercenter

import (
	"context"

	"cloud-disk/user-rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetFileUploadReq                            = pb.GetFileUploadReq
	GetFileUploadResp                           = pb.GetFileUploadResp
	GetUserFileDeleteReq                        = pb.GetUserFileDeleteReq
	GetUserFileDeleteResp                       = pb.GetUserFileDeleteResp
	GetUserFileListReq                          = pb.GetUserFileListReq
	GetUserFileListResp                         = pb.GetUserFileListResp
	GetUserFileListResp_UserFile                = pb.GetUserFileListResp_UserFile
	GetUserFileUpdateReq                        = pb.GetUserFileUpdateReq
	GetUserFileUpdateResp                       = pb.GetUserFileUpdateResp
	GetUserFileUploadChunkCompleteReq           = pb.GetUserFileUploadChunkCompleteReq
	GetUserFileUploadChunkCompleteReq_CosObject = pb.GetUserFileUploadChunkCompleteReq_CosObject
	GetUserFileUploadChunkCompleteResp          = pb.GetUserFileUploadChunkCompleteResp
	GetUserFileUploadChunkReq                   = pb.GetUserFileUploadChunkReq
	GetUserFileUploadChunkResp                  = pb.GetUserFileUploadChunkResp
	GetUserFolderCreateReq                      = pb.GetUserFolderCreateReq
	GetUserFolderCreateResp                     = pb.GetUserFolderCreateResp
	GetUserLoginReq                             = pb.GetUserLoginReq
	GetUserLoginResp                            = pb.GetUserLoginResp
	GetUserRefreshTokenReq                      = pb.GetUserRefreshTokenReq
	GetUserRefreshTokenResp                     = pb.GetUserRefreshTokenResp
	GetUserRegisterReq                          = pb.GetUserRegisterReq
	GetUserRegisterResp                         = pb.GetUserRegisterResp
	GetUserRepositorySaveReq                    = pb.GetUserRepositorySaveReq
	GetUserRepositorySaveResp                   = pb.GetUserRepositorySaveResp
	GetUserSendCodeReq                          = pb.GetUserSendCodeReq
	GetUserSendCodeResp                         = pb.GetUserSendCodeResp
	GetUserUploadPrepareReq                     = pb.GetUserUploadPrepareReq
	GetUserUploadPrepareResp                    = pb.GetUserUploadPrepareResp

	Usercenter interface {
		// 用户注册
		GetUserRegister(ctx context.Context, in *GetUserRegisterReq, opts ...grpc.CallOption) (*GetUserRegisterResp, error)
		// 用户登录
		GetUserLogin(ctx context.Context, in *GetUserLoginReq, opts ...grpc.CallOption) (*GetUserLoginResp, error)
		// 发送验证码
		GetUserSendCode(ctx context.Context, in *GetUserSendCodeReq, opts ...grpc.CallOption) (*GetUserSendCodeResp, error)
		// 发送文件
		GetFileUpload(ctx context.Context, in *GetFileUploadReq, opts ...grpc.CallOption) (*GetFileUploadResp, error)
		// 关联用户数据库
		GetUserRepositorySave(ctx context.Context, in *GetUserRepositorySaveReq, opts ...grpc.CallOption) (*GetUserRepositorySaveResp, error)
		// 列出文件情况
		GetUserFileList(ctx context.Context, in *GetUserFileListReq, opts ...grpc.CallOption) (*GetUserFileListResp, error)
		// 更新文件
		GetUserFileUpdate(ctx context.Context, in *GetUserFileUpdateReq, opts ...grpc.CallOption) (*GetUserFileUpdateResp, error)
		// 创建文件夹
		GetUserFolderCreate(ctx context.Context, in *GetUserFolderCreateReq, opts ...grpc.CallOption) (*GetUserFolderCreateResp, error)
		// 文件删除
		GetUserFileDelete(ctx context.Context, in *GetUserFileDeleteReq, opts ...grpc.CallOption) (*GetUserFileDeleteResp, error)
		// 刷新token
		GetUserRefreshToken(ctx context.Context, in *GetUserRefreshTokenReq, opts ...grpc.CallOption) (*GetUserRefreshTokenResp, error)
		// 分片上传准备
		GetUserUploadPrepare(ctx context.Context, in *GetUserUploadPrepareReq, opts ...grpc.CallOption) (*GetUserUploadPrepareResp, error)
		// 分片上传
		GetUserFileUploadChunk(ctx context.Context, in *GetUserFileUploadChunkReq, opts ...grpc.CallOption) (*GetUserFileUploadChunkResp, error)
		// 分片上传完成
		GetUserFileUploadChunkComplete(ctx context.Context, in *GetUserFileUploadChunkCompleteReq, opts ...grpc.CallOption) (*GetUserFileUploadChunkCompleteResp, error)
	}

	defaultUsercenter struct {
		cli zrpc.Client
	}
)

func NewUsercenter(cli zrpc.Client) Usercenter {
	return &defaultUsercenter{
		cli: cli,
	}
}

// 用户注册
func (m *defaultUsercenter) GetUserRegister(ctx context.Context, in *GetUserRegisterReq, opts ...grpc.CallOption) (*GetUserRegisterResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserRegister(ctx, in, opts...)
}

// 用户登录
func (m *defaultUsercenter) GetUserLogin(ctx context.Context, in *GetUserLoginReq, opts ...grpc.CallOption) (*GetUserLoginResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserLogin(ctx, in, opts...)
}

// 发送验证码
func (m *defaultUsercenter) GetUserSendCode(ctx context.Context, in *GetUserSendCodeReq, opts ...grpc.CallOption) (*GetUserSendCodeResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserSendCode(ctx, in, opts...)
}

// 发送文件
func (m *defaultUsercenter) GetFileUpload(ctx context.Context, in *GetFileUploadReq, opts ...grpc.CallOption) (*GetFileUploadResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetFileUpload(ctx, in, opts...)
}

// 关联用户数据库
func (m *defaultUsercenter) GetUserRepositorySave(ctx context.Context, in *GetUserRepositorySaveReq, opts ...grpc.CallOption) (*GetUserRepositorySaveResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserRepositorySave(ctx, in, opts...)
}

// 列出文件情况
func (m *defaultUsercenter) GetUserFileList(ctx context.Context, in *GetUserFileListReq, opts ...grpc.CallOption) (*GetUserFileListResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserFileList(ctx, in, opts...)
}

// 更新文件
func (m *defaultUsercenter) GetUserFileUpdate(ctx context.Context, in *GetUserFileUpdateReq, opts ...grpc.CallOption) (*GetUserFileUpdateResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserFileUpdate(ctx, in, opts...)
}

// 创建文件夹
func (m *defaultUsercenter) GetUserFolderCreate(ctx context.Context, in *GetUserFolderCreateReq, opts ...grpc.CallOption) (*GetUserFolderCreateResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserFolderCreate(ctx, in, opts...)
}

// 文件删除
func (m *defaultUsercenter) GetUserFileDelete(ctx context.Context, in *GetUserFileDeleteReq, opts ...grpc.CallOption) (*GetUserFileDeleteResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserFileDelete(ctx, in, opts...)
}

// 刷新token
func (m *defaultUsercenter) GetUserRefreshToken(ctx context.Context, in *GetUserRefreshTokenReq, opts ...grpc.CallOption) (*GetUserRefreshTokenResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserRefreshToken(ctx, in, opts...)
}

// 分片上传准备
func (m *defaultUsercenter) GetUserUploadPrepare(ctx context.Context, in *GetUserUploadPrepareReq, opts ...grpc.CallOption) (*GetUserUploadPrepareResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserUploadPrepare(ctx, in, opts...)
}

// 分片上传
func (m *defaultUsercenter) GetUserFileUploadChunk(ctx context.Context, in *GetUserFileUploadChunkReq, opts ...grpc.CallOption) (*GetUserFileUploadChunkResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserFileUploadChunk(ctx, in, opts...)
}

// 分片上传完成
func (m *defaultUsercenter) GetUserFileUploadChunkComplete(ctx context.Context, in *GetUserFileUploadChunkCompleteReq, opts ...grpc.CallOption) (*GetUserFileUploadChunkCompleteResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.GetUserFileUploadChunkComplete(ctx, in, opts...)
}
